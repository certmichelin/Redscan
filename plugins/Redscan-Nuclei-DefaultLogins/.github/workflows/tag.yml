# This workflow will build the java project then tag the docker image.

name: Redscan Scanner CI.

on:
  push:
    tags:
      - '*.*.*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set output
      id: vars
      run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}

    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
        server-id: redscan-utils # Value of the distributionManagement/repository/id field of the pom.xml
        server-username: GH_PACKAGE_LOGIN
        server-password: GH_PACKAGE_TOKEN
        settings-path: ${{ github.workspace }} # location for the settings.xml file
    
    - name: Package
      run: mvn package -s $GITHUB_WORKSPACE/settings.xml
      env:
        GH_PACKAGE_LOGIN: ${{ secrets.GH_PACKAGE_LOGIN }}
        GH_PACKAGE_TOKEN: ${{ secrets.GH_PACKAGE_TOKEN }}
    
    - name: Build & Push the image to GitHub Packages
      uses: docker/build-push-action@v1
      with:
        username: ${{ github.actor }}
        password: ${{ secrets.DOCKER_TOKEN }}
        registry: ghcr.io
        repository: deddobifu/redscan-nuclei-defaultlogins/redscan-nuclei-defaultlogins
        tags: ${{ steps.vars.outputs.tag }}
        
